<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry id='winlistman'>
<!--  t -->
<!--  @(#)WinList.1	002/07/00 -->
<refmeta>
<refentrytitle>WinList</refentrytitle>
<manvolnum>1.8</manvolnum>
<refmiscinfo class='date'>Feb 7 2000</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>WinList</refname>
<refpurpose>the AfterStep window list module</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>WinList</command>    <arg choice='opt'>-f <replaceable>config_file</replaceable></arg>
    <group choice='opt'><arg choice='plain'>-v </arg><arg choice='plain'>--version </arg></group>
    <group choice='opt'><arg choice='plain'>-h </arg><arg choice='plain'>--help </arg></group>
    <arg choice='plain'><replaceable>AlthoughWinListcanberunfromthecommandline,itisnormallyspawnedbyafterstepintheautoexecfile,inthefollowingmanner:Module"I"WinListFromwithinanafterstepmenufileby'WinList':%cat"~/GNUstep/Library/AfterStep/start/Modules/WinList"Module"WinList"WinListMiniPixmap"mini-as.xpm"</replaceable></arg>
    <sbr/>
    <arg choice='plain'><replaceable>TostoptheWinListmodule,amenuitemcanbeused:%cat"~/GNUstep/Library/AfterStep/start/Modules/WinList_Stop"KillModuleByName"StopWinList"WinListMiniPixmap"mini-as.xpm"</replaceable></arg>
    <sbr/>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>The <command>WinList</command> module provides a window list made up of buttons, each
corresponding to a window that AfterStep is managing.  Clicking on the
buttons with any of the three mouse buttons will either do a default
action or can be user configured by editing the <emphasis remap='I'>winlist</emphasis> file.</para>

</refsect1>

<refsect1 id='options'><title>OPTIONS</title>
<variablelist remap='IP'>
  <varlistentry>
  <term>-f <emphasis remap='I'>config_file</emphasis></term>
  <listitem>
<para>Use <emphasis remap='I'>config_file</emphasis> instead of the default configuration file.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>-h | --help</term>
  <listitem>
<para>Print a usage message and exit successfully.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>-v | --version</term>
  <listitem>
<para>Print version information and exit successfully.</para>

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='initialization'><title>INITIALIZATION</title>
<para>During initialization, <command>WinList</command> will search a configuration file
which describes the colors, font, actions to take on mouse clicks, and
geometry settings to use. This file will be the one specified by the 
<option>-f</option> option (if given).  Else, the ~/GNUstep/Library/AfterStep/winlist 
file will be used if it exists.  Else, /usr/local/share/afterstep/winlist 
will be used.</para>

<para>If the <command>WinList</command> executable is linked to another name, ie 'ln -s
<command>WinList</command> <emphasis remap='B'>OtherWinList</emphasis>', then another module called
<emphasis remap='B'>OtherWinList</emphasis> can be started, with a completely different set of
configurations than <command>WinList</command>, simply by adding <emphasis remap='I'>*OtherWinList</emphasis>
options following the same <emphasis remap='I'>*WinList</emphasis> configuration options below to the
<emphasis remap='I'>winlist</emphasis> file. This way multiple Identify programs can be used.</para>

</refsect1>

<refsect1 id='invocation'><title>INVOCATION</title>
<para><command>WinList</command> can be invoked from the <emphasis remap='I'>autoexec</emphasis> file or from a menu
item as shown in the Synopsis section above.</para>

<para><command>WinList</command> can also be invoked from binding "Module WinList
<emphasis remap='I'>argument</emphasis>" to a keystroke or mouse button using <emphasis remap='I'>Transient</emphasis> as an
argument which will cause <command>WinList</command> to resemble the built-in window
list.</para>

<para>AfterStep will search through the directories specified in the
<emphasis remap='I'>ModulePath</emphasis> configuration in the <emphasis remap='I'>base.#bpp</emphasis> (where # is your
colordepth) to attempt to locate WinList.</para>

</refsect1>

<refsect1 id='configuration_options'><title>CONFIGURATION OPTIONS</title>
<para><command>WinList</command> reads the <emphasis remap='I'>winlist</emphasis> file when it starts up, and looks
for its configuration options.  The MyStyle structure should now be specified
in the look files.  This allows for a greater control of the running module
(different WinList look with different desktop looks, dynamic reconfiguration
etc.).</para>

<variablelist remap='IP'>
  <varlistentry>
  <term>MyStyle "*WinList"</term>
  <term>  <emphasis remap='I'>style_option</emphasis></term>
  <term>~MyStyle</term>
  <listitem>

<para>The possible <emphasis remap='I'>style_option</emphasis>s follow:</para>

  <!-- .RS -->
    <variablelist remap='IP'>
      <varlistentry>
      <term>Font <emphasis remap='I'>font</emphasis></term>
      <listitem>
<para>Specifies the font associated with this style. <emphasis remap='I'>font</emphasis> is a standard 
X11 font definition.</para>

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>ForeColor <emphasis remap='I'>color</emphasis></term>
      <listitem>
<para>Specifies the text color associated with this style. <emphasis remap='I'>color</emphasis> is a 
standard X11 color definition.</para>

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>BackColor <emphasis remap='I'>color</emphasis></term>
      <listitem>
<para>Specifies the background color associated with this style. <emphasis remap='I'>color</emphasis> 
is a standard X11 color definition.</para>

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>TextStyle <emphasis remap='I'>style</emphasis></term>
      <listitem>
<para>Specifies the text <emphasis remap='I'>style</emphasis> associated with this style. <emphasis remap='I'>style</emphasis> 
can be 0, 1, or 2:</para>

<literallayout remap='.nf'>
0: normal text
1: 3d effect #1
2: 3d effect #2
</literallayout> <!-- .fi -->

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>MaxColors <emphasis remap='I'>maximum</emphasis></term>
      <listitem>
<para>Specifies the <emphasis remap='I'>maximum</emphasis> number of colors that the <emphasis remap='I'>BackGradient</emphasis> 
can use. jpegs specified with <emphasis remap='I'>BackPixmap</emphasis> will also be limited to 
this number of colors.</para>

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>BackGradient <emphasis remap='I'>type</emphasis> <emphasis remap='I'>from</emphasis> <emphasis remap='I'>to</emphasis></term>
      <listitem>
<para>Specifies that a gradient should be used as a background instead of a 
solid color. The gradient colors start at <emphasis remap='I'>from</emphasis> and end at <emphasis remap='I'>to</emphasis>. 
<emphasis remap='I'>from</emphasis> and <emphasis remap='I'>to</emphasis> are standard X11 color definitions. <emphasis remap='I'>type</emphasis> 
can be 1, 2, 3, 4, or 5:</para>

<literallayout remap='.nf'>
1: Wharf-style diagonal gradient
2: Horizontal from top to bottom
3: Horizontal from top/bottom to center
4: Vertical from left to right
5: Vertical from left/right to center
</literallayout> <!-- .fi -->

      </listitem>
      </varlistentry>
      <varlistentry>
      <term>BackPixmap <emphasis remap='I'>type</emphasis> <emphasis remap='I'>pixmap_name|color_name</emphasis></term>
      <listitem>
<para>Specifies that a pixmap should be used as a background instead of a 
solid color. This option has two forms, depending on the value of 
<emphasis remap='I'>type</emphasis>. If <emphasis remap='I'>type</emphasis> is 128, the second parameter, <emphasis remap='I'>pixmap_name</emphasis> 
must be the name of an xpm, jpeg, or png image which can be found in 
<emphasis remap='I'>PixmapPath</emphasis>. If <emphasis remap='I'>type</emphasis> is 129, the root pixmap (desktop 
background) will be used, and the optional second parameter must be a 
color with which the root pixmap will be shaded.</para>

<literallayout remap='.nf'>
128: tiled pixmap from the upper left
129: "transparent"
</literallayout> <!-- .fi -->

      </listitem>
      </varlistentry>
    </variablelist>
  </listitem>
  </varlistentry>
</variablelist>
<!-- .RE -->

<variablelist remap='IP'>
  <varlistentry>
  <term>*WinListGeometry <emphasis remap='I'>geometry</emphasis></term>
  <listitem>
<para>Specifies the location and gravity of the WinList window.  At the current
time, size is not supported and WinList will resize itself as buttons are
added.  If the NoAnchor option is not specified then the window's gravity
corner will be anchored, and the window will grow in the opposite direction.
(i.e. If the geometry is specified -5-5, that is SoutEastGravity.  This will
cause the window to draw up and to the left as windows are added)</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListHideGeometry <emphasis remap='I'>geometry</emphasis></term>
  <listitem>
<para>Specifies the location of the WinList window when there are no windows. 
It will cause WinList to display nice little window with AfterStep version
in there. If size is supplied WinList will center the label within the 
window.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListUseSkipList</term>
  <listitem>
<para>Tells <command>WinList</command> to not show the windows that are have
<emphasis remap='I'>WindowListSkip</emphasis> as a <emphasis remap='I'>Style</emphasis> option in the \fdatabase<emphasis remap='P->I'> file.</emphasis></para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListNoAnchor</term>
  <listitem>
<para>By default, <command>WinList</command> will anchor the gravity corner so the window will
grow in the opposite direction.  This undoes that option.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListUseIconNames</term>
  <listitem>
<para>Tells WinList to use the icon name of the window instead of the full window
name.  This is useful to keep the width of the window small.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListAction <emphasis remap='I'>action response[,reponse...]</emphasis></term>
  <listitem>
<para>Tells WinList to do <emphasis remap='I'>response</emphasis> when <emphasis remap='I'>action</emphasis> is done.  The
currently supported <emphasis remap='I'>action</emphasis>s are: Click1, Click2, Click3.  The
currently supported <emphasis remap='I'>response</emphasis>s are any AfterStep built-in commands,
including modules and functions.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListOrientation <emphasis remap='I'>down|across</emphasis></term>
  <listitem>
<para>Will make a vertical or horizontal winlist.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListMaxWidth <emphasis remap='I'>width in pixel</emphasis></term>
  <listitem>
<para>Sets either maxwidth for a vertical winlist or the actual width for a
horizontal "taskbar".</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListJustify <emphasis remap='I'>&lt;Left|Center|Right&gt;</emphasis></term>
  <listitem>
<para>If used, will justify the text as specified. If unspecified, the default is
to center text.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListAutoHide <emphasis remap='I'>number</emphasis></term>
  <listitem>
<para>Makes <command>WinList</command> auto-hide, when the mouse cursor travels off <command>WinList</command> it reduces its size and becomes a line, when the mouse cursor travels onto hidden <command>WinList</command> it readjusts its size to normal dimensions.  0 turns this feature off, positive numbers turn it on.  This option makes sense only when <command>WinList</command> is set to <emphasis remap='I'>StaysOnTop</emphasis> in the database file. It is possible to turn <emphasis remap='I'>AutoHide</emphasis> on/off when the module is running: pressing 'u' while the cursor is in the <command>WinList</command> window permanently unhides, pressing 'h' while the cursor is in the <command>WinList</command> window turns <emphasis remap='I'>AutoHide</emphasis> on.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListBalloons</term>
  <listitem>
<para>Turns on the balloon feature. A "balloon" is displayed showing the name 
of the button the pointer is resting on in the <command>WinList</command>. The balloon 
background and text are configured with the MyStyle "*WinListBalloon".  
See <emphasis remap='B'>afterstep(1x)</emphasis> for more information on MyStyles.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListBalloonBorderWidth <emphasis remap='I'>number</emphasis></term>
  <listitem>
<para>Sets the width of the balloon window's border. Defaults to 1.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListBalloonBorderColor <emphasis remap='I'>color</emphasis></term>
  <listitem>
<para>Sets the color of the balloon window's border. Defaults to black.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListBalloonDelay <emphasis remap='I'>number</emphasis></term>
  <listitem>
<para>Specifies the period in milliseconds to delay the appearance of the balloon.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term>*WinListBalloonYOffset <emphasis remap='I'>number</emphasis></term>
  <listitem>
<para>The balloon window is positioned to be horizontally centered against
the <command>WinList</command> window it is describing. The vertical position may be
set as an offset. Negative offsets of <option>-N</option> are placed <emphasis remap='I'>N</emphasis>
pixels above the <command>WinList</command> window, positive offsets of <emphasis remap='I'>+N</emphasis> are 
placed <emphasis remap='I'>N</emphasis> pixels below. Defaults to +2.</para>

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='files'><title>FILES</title>
<variablelist remap='IP'>
  <varlistentry>
  <term><filename>/usr/local/share/afterstep/winlist</filename></term>
  <listitem>
<para>The global configuration file for system wide defaults of all users.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>$HOME/GNUstep/Library/AfterStep/winlist</emphasis></term>
  <listitem>
<para>This file should be copied from the <filename>/usr/local/share/afterstep/winlist</filename> and edited to suit the user's specific requirements.  This file, if exists, will override the system wide default file.</para>

  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='examples'><title>EXAMPLES</title>
<para>The <emphasis remap='I'>winlist</emphasis> file shipped contains a working example, refer to the
<emphasis remap='B'>FILES</emphasis> section above for its configuration options.</para>


<para>To pop up the window list in tranient mode (appear only when button 3 is
pressed &amp; held):</para>

<para>	...the <emphasis remap='I'>feel</emphasis> file would contain -</para>
<literallayout remap='.nf'>
	Mouse 3  R  A  Module "WinList" WinList Transient

</literallayout> <!-- .fi -->

</refsect1>

<refsect1 id='authors'><title>AUTHORS</title>
<para>Rene Fichter &lt;ceezaer@cyberspace.org&gt;</para>
<literallayout remap='.nf'>
Mike Finger &lt;mfinger@mermaid.micro.umn.edu&gt;
</literallayout><literallayout remap='.nf'>
David Mihm &lt;dmihm@swbell.net&gt; [Man page]
</literallayout><literallayout remap='.nf'>
Rafal Wierzbicki &lt;rafal@mcss.mcmaster.ca&gt;
</literallayout></refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>afterstep</refentrytitle><manvolnum>1</manvolnum></citerefentry>,</para>
</refsect1>
</refentry>

